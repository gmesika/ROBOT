/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.geronimo.robot;

/**
 *
 * @author guymes
 */
public class RobotRecordPropertiesForm extends javax.swing.JFrame {

    /**
     * Creates new form RobotRecordPropertiesForm
     */
    public RobotRecordPropertiesForm() {
        initComponents();
        
        loadRecordingProperties();
        setGraceControls();
    }
    
    private void loadRecordingProperties()
    {
    	RobotRecord robotRecord = RobotController.getInstance().getLoadedRobotRecord();
    	this.recordingName.setText(robotRecord.recordName);
    	this.recordingDescription.setText(robotRecord.recordDescription);
    	this.gracePeriodOn.setSelected(robotRecord.gracePeriodOn);
    	this.gracePeriodms.setValue(robotRecord.gracePeriodms / 500);
    	graceMs.setText(String.valueOf(500*gracePeriodms.getValue()));
    	this.numberOfGraceAttemps.setValue(robotRecord.numOfGraceAttempts);    	
    	this.useAggressive.setSelected(robotRecord.useAggressive);
    	closeWhenDone.setSelected(robotRecord.closeWhenPlayingIsDone);
    	logSuccessOrError.setSelected(robotRecord.logIfPlayingSuccessfullyOrError );
    	supressMessagesDuringPlay.setSelected(robotRecord.supressMessagesDuringPlay);    	
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        recordingDescription1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        recordingName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordingDescription = new javax.swing.JTextArea();
        gracePeriodms = new javax.swing.JSlider();
        numberOfGraceAttemps = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        gracePeriodOn = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        useAggressive = new javax.swing.JCheckBox();
        graceMs = new javax.swing.JLabel();
        closeWhenDone = new javax.swing.JCheckBox();
        logSuccessOrError = new javax.swing.JCheckBox();
        supressMessagesDuringPlay = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();

        recordingDescription1.setColumns(20);
        recordingDescription1.setRows(5);
        jScrollPane2.setViewportView(recordingDescription1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recording Properties");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        recordingDescription.setColumns(20);
        recordingDescription.setRows(5);
        jScrollPane1.setViewportView(recordingDescription);

        gracePeriodms.setMajorTickSpacing(3);
        gracePeriodms.setMaximum(3);
        gracePeriodms.setMinimum(1);
        gracePeriodms.setMinorTickSpacing(1);
        gracePeriodms.setPaintTicks(true);
        gracePeriodms.setSnapToTicks(true);
        gracePeriodms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gracePeriodmsMouseClicked(evt);
            }
        });
        gracePeriodms.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                gracePeriodmsCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        gracePeriodms.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                gracePeriodmsVetoableChange(evt);
            }
        });

        numberOfGraceAttemps.setMajorTickSpacing(5);
        numberOfGraceAttemps.setMaximum(20);
        numberOfGraceAttemps.setMinorTickSpacing(2);
        numberOfGraceAttemps.setPaintLabels(true);
        numberOfGraceAttemps.setPaintTicks(true);
        numberOfGraceAttemps.setValue(10);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recordingName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(gracePeriodms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(numberOfGraceAttemps, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(recordingName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(gracePeriodms, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberOfGraceAttemps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Name:");

        jLabel2.setText("Description:");

        jLabel3.setText("Grace Period (ms):");

        gracePeriodOn.setText("Allow load with grace");
        gracePeriodOn.setToolTipText("Allow some grace time for the control to load. Depends on the machine running Swing, some might take more time to load then others.");
        gracePeriodOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gracePeriodOnActionPerformed(evt);
            }
        });

        jLabel4.setText("Number of attemps:");

        useAggressive.setText("Use aggressive approch");
        useAggressive.setToolTipText("Enable or disable a more aggresive approch to locate the controls. In some cases the control might be in a diffrent path due to momentray diffrences with Swing.");

        graceMs.setText("0");

        closeWhenDone.setText("Close when playing is done");

        logSuccessOrError.setText("Log if playing Successly or Failure");

        supressMessagesDuringPlay.setText("Supress messages during play");
        supressMessagesDuringPlay.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supressMessagesDuringPlay)
                    .addComponent(closeWhenDone)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graceMs))
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(gracePeriodOn)
                    .addComponent(useAggressive)
                    .addComponent(logSuccessOrError))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(191, 191, 191)
                .addComponent(gracePeriodOn)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(graceMs))
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(useAggressive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeWhenDone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logSuccessOrError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(supressMessagesDuringPlay)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("OK");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    	RobotRecord robotRecord = RobotController.getInstance().getLoadedRobotRecord();
    	robotRecord.recordName = this.recordingName.getText();
    	robotRecord.recordDescription = this.recordingDescription.getText();
    	
    	robotRecord.gracePeriodms = 500*gracePeriodms.getValue();
    	robotRecord.gracePeriodOn = gracePeriodOn.isSelected();
    	robotRecord.numOfGraceAttempts = numberOfGraceAttemps.getValue();
    	robotRecord.closeWhenPlayingIsDone = closeWhenDone.isSelected();
    	robotRecord.logIfPlayingSuccessfullyOrError = logSuccessOrError.isSelected();
    	robotRecord.supressMessagesDuringPlay = supressMessagesDuringPlay.isSelected();
    	this.dispose();    	
    }//GEN-LAST:event_jButton2ActionPerformed

    private void gracePeriodOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gracePeriodOnActionPerformed
    	setGraceControls();
    }//GEN-LAST:event_gracePeriodOnActionPerformed

    private void gracePeriodmsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gracePeriodmsMouseClicked
        graceMs.setText(String.valueOf(500*gracePeriodms.getValue()));
    }//GEN-LAST:event_gracePeriodmsMouseClicked

    private void gracePeriodmsVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_gracePeriodmsVetoableChange
        //System.out.println("");
    }//GEN-LAST:event_gracePeriodmsVetoableChange

    private void gracePeriodmsCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_gracePeriodmsCaretPositionChanged
        //System.out.println("");
    }//GEN-LAST:event_gracePeriodmsCaretPositionChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        loadRecordingProperties();
        setGraceControls();
    }//GEN-LAST:event_formWindowActivated

    private void setGraceControls()
    {
    	gracePeriodms.setEnabled(this.gracePeriodOn.isSelected());
    	numberOfGraceAttemps.setEnabled(this.gracePeriodOn.isSelected());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RobotRecordPropertiesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RobotRecordPropertiesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RobotRecordPropertiesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RobotRecordPropertiesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RobotRecordPropertiesForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox closeWhenDone;
    private javax.swing.JLabel graceMs;
    private javax.swing.JCheckBox gracePeriodOn;
    private javax.swing.JSlider gracePeriodms;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox logSuccessOrError;
    private javax.swing.JSlider numberOfGraceAttemps;
    private javax.swing.JTextArea recordingDescription;
    private javax.swing.JTextArea recordingDescription1;
    private javax.swing.JTextField recordingName;
    private javax.swing.JCheckBox supressMessagesDuringPlay;
    private javax.swing.JCheckBox useAggressive;
    // End of variables declaration//GEN-END:variables
}
